cmake_minimum_required(VERSION 3.0)

project(iDynTreePlotter)

find_package(Qt5 COMPONENTS Widgets Charts QUIET)
if (${Qt5Charts_FOUND})
  idyntree_enable_cxx11()
  
  find_package(YARP REQUIRED)
  list(APPEND CMAKE_MODULE_PATH ${YARP_MODULE_PATH})
  
  include(YarpIDL)
  yarp_idl_to_dir("${CMAKE_CURRENT_SOURCE_DIR}/thrifts/chartsService.thrift" 
                  "${CMAKE_CURRENT_BINARY_DIR}/autogenerated" THRIFT_SOURCES THRIFT_HEADERS THRIFT_INCLUDE_DIRS)

  add_library(${PROJECT_NAME}-service STATIC ${THRIFT_SOURCES} ${THRIFT_HEADERS})
  target_include_directories(${PROJECT_NAME}-service SYSTEM PUBLIC ${THRIFT_INCLUDE_DIRS} ${YARP_INCLUDE_DIRS})
  target_link_libraries(${PROJECT_NAME}-service YARP::YARP_init YARP::YARP_OS YARP::YARP_sig)
  
  
  set(SOURCES src/main.cpp src/ChartsManager.cpp src/ChartsManagerWindow.cpp)
  set(HEADERS include/ChartsManager.h include/ChartsManagerWindow.h)
  
  add_executable(${PROJECT_NAME} ${SOURCES} ${HEADERS})
  target_include_directories(${PROJECT_NAME} PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/include)
  target_link_libraries(${PROJECT_NAME} Qt5::Charts Qt5::Widgets
                                        ${PROJECT_NAME}-service)
  
endif()
